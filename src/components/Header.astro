---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import ThemeToggle from './ThemeToggle.astro';

const navLinks = [
	{ href: '/', label: 'Home' },
	{ href: '/category', label: 'Categories' },
	{ href: '/about', label: 'About' }
];
---

<header class="header">
	<nav class="nav" aria-label="Main navigation">
		<div class="nav-container">
			<a href="/" class="logo" aria-label="Home">
				<h2>{SITE_TITLE}</h2>
			</a>
			
			<button 
				class="menu-button"
				aria-label="Toggle menu"
				aria-expanded="false"
				aria-controls="nav-menu"
			>
				<span class="menu-icon" aria-hidden="true">
					<span class="menu-icon-bar"></span>
					<span class="menu-icon-bar"></span>
					<span class="menu-icon-bar"></span>
				</span>
			</button>

			<div class="nav-right" id="nav-menu">
				<ul class="nav-links">
					{navLinks.map(({ href, label }) => (
						<li>
							<HeaderLink href={href}>{label}</HeaderLink>
						</li>
					))}
				</ul>
				<div class="theme-toggle-wrapper">
					<ThemeToggle />
				</div>
			</div>
		</div>
	</nav>
</header>

<style>
	.header {
		position: sticky;
		top: 0;
		z-index: 100;
		background: var(--background-color);
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
		transition: background-color var(--transition-duration) var(--transition-timing);
		border-bottom: 1px solid var(--border-color);
	}

	.nav {
		padding: 0 var(--space-5);
	}

	.nav-container {
		max-width: 720px;
		margin: 0 auto;
		padding: var(--space-4) 0;
		display: flex;
		align-items: center;
		justify-content: space-between;
	}

	.logo {
		text-decoration: none;
		color: rgb(var(--black));
		transition: opacity var(--transition-duration) var(--transition-timing);
		
		&:hover {
			opacity: 0.8;
		}
		
		h2 {
			margin: 0;
			font-size: 1.25rem;
			font-weight: 700;
			letter-spacing: -0.5px;
		}
	}

	.menu-button {
		display: none;
		background: none;
		border: none;
		padding: var(--space-2);
		cursor: pointer;
		transition: opacity var(--transition-duration) var(--transition-timing);
		
		&:hover {
			opacity: 0.8;
		}
	}

	.menu-icon {
		display: block;
		width: 24px;
		height: 24px;
		position: relative;
	}

	.menu-icon-bar {
		display: block;
		width: 100%;
		height: 2px;
		background-color: rgb(var(--black));
		position: absolute;
		transition: all var(--transition-duration) var(--transition-timing);
		border-radius: 2px;
		
		&:nth-child(1) {
			top: 6px;
		}
		
		&:nth-child(2) {
			top: 12px;
		}
		
		&:nth-child(3) {
			top: 18px;
		}
	}

	.nav-right {
		display: flex;
		align-items: center;
		gap: var(--space-6);
	}

	.nav-links {
		display: flex;
		gap: var(--space-5);
		list-style: none;
		margin: 0;
		padding: 0;
		
		a {
			position: relative;
			color: rgb(var(--black));
			text-decoration: none;
			font-weight: 500;
			font-size: 0.95rem;
			padding: var(--space-2) 0;
			transition: color var(--transition-duration) var(--transition-timing);
			
			&:hover {
				color: var(--accent);
			}
			
			&::after {
				content: '';
				position: absolute;
				bottom: 0;
				left: 0;
				width: 100%;
				height: 2px;
				background-color: var(--accent);
				transform: scaleX(0);
				transform-origin: right;
				transition: transform var(--transition-duration) var(--transition-timing);
			}
			
			&:hover::after,
			&.active::after {
				transform: scaleX(1);
				transform-origin: left;
			}
		}
	}

	.theme-toggle-wrapper {
		display: flex;
		align-items: center;
	}

	@media (max-width: 768px) {
		.menu-button {
			display: block;
		}

		.nav-right {
			position: fixed;
			top: 0;
			right: -100%;
			width: 100%;
			height: 100vh;
			background: var(--background-color);
			flex-direction: column;
			padding: var(--space-8) var(--space-6) var(--space-6);
			transition: right var(--transition-duration) var(--transition-timing);
			gap: var(--space-8);
			
			&[aria-expanded="true"] {
				right: 0;
			}
		}

		.nav-links {
			flex-direction: column;
			gap: var(--space-6);
			width: 100%;
			
			a {
				display: block;
				padding: var(--space-3) 0;
				font-size: 1.1rem;
			}
		}

		.menu-button[aria-expanded="true"] {
			.menu-icon-bar {
				&:nth-child(1) {
					transform: translateY(6px) rotate(45deg);
				}
				
				&:nth-child(2) {
					opacity: 0;
				}
				
				&:nth-child(3) {
					transform: translateY(-6px) rotate(-45deg);
				}
			}
		}
	}
</style>

<script>
	const menuButton = document.querySelector('.menu-button');
	const navMenu = document.querySelector('.nav-right');

	menuButton?.addEventListener('click', () => {
		const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
		menuButton.setAttribute('aria-expanded', String(!isExpanded));
		navMenu?.setAttribute('aria-expanded', String(!isExpanded));
	});
</script>
