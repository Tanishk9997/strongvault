---
import FormattedDate from './FormattedDate.astro';
import { categories } from '../data/categories';

interface Props {
	post: {
		id: string;
		data: {
			title: string;
			description: string;
			pubDate: Date;
			category?: string[];
			subcategory?: string;
			language: string[];
			readingTime?: number;
			tags?: string[];
		};
	};
	translations?: {
		id: string;
		language: string;
	}[];
}

const { post, translations } = Astro.props;

// Find the category data for all categories
const categoryData = post.data.category?.map(catId => categories.find(cat => cat.id === catId)) || [];

// Get the alternate language translation if it exists
const alternateTranslation = translations?.find(t => t.id !== post.id);
---

<article class="post-card">
	{alternateTranslation && (
		<a 
			href={`/blog/${alternateTranslation.id}/`} 
			class="language-switch"
			aria-label={`Read in ${alternateTranslation.language === 'en' ? 'English' : 'Spanish'}`}
		>
			<span class="flag">{alternateTranslation.language === 'en' ? 'ðŸ‡ºðŸ‡¸' : 'ðŸ‡µðŸ‡·'}</span>
			<span class="text">
				{alternateTranslation.language === 'en' ? 'Read in English' : 'Leer en EspaÃ±ol'}
			</span>
		</a>
	)}
	<div class="post-content">
		<div class="post-meta">
			<div class="meta-details">
				{categoryData.length > 0 && (
					<nav class="category-nav" aria-label="Post categories">
						{categoryData.map((cat, index) => (
							<>
								<a href={`/category/${cat?.id}/`} class="category-link">
									<span class="category-icon">{cat?.icon}</span>
									<span class="category-name">{cat?.name}</span>
									{post.data.subcategory && index === 0 && <span class="subcategory">/ {post.data.subcategory}</span>}
								</a>
								{index < categoryData.length - 1 && <span class="separator">â€¢</span>}
							</>
						))}
					</nav>
				)}
				{categoryData.length > 0 && <span class="separator">â€¢</span>}
				<FormattedDate date={post.data.pubDate} />
				{post.data.readingTime && (
					<>
						<span class="separator">â€¢</span>
						<span class="reading-time">{post.data.readingTime} min read</span>
					</>
				)}
			</div>
		</div>

		<a href={`/blog/${post.id}/`} class="post-title-link">
			<h2 class="post-title">{post.data.title}</h2>
		</a>
		<p class="post-excerpt">{post.data.description}</p>
	</div>

	{post.data.tags && post.data.tags.length > 0 && (
		<div class="post-tags">
			{post.data.tags.map((tag: string) => (
				<span class="tag">{tag}</span>
			))}
		</div>
	)}
</article>

<style>
	.post-card {
		background: rgb(var(--gray-light));
		border-radius: 20px;
		padding: 2.5rem;
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
		border: 1px solid rgba(0, 0, 0, 0.08);
		display: flex;
		flex-direction: column;
		gap: 1.75rem;
		position: relative;
		overflow: hidden;
	}

	.post-card::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		height: 4px;
		background: linear-gradient(90deg, var(--accent-color), var(--accent-color-dark));
		opacity: 0;
		transition: opacity 0.3s ease;
	}

	.post-card:hover {
		transform: translateY(-4px);
		box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
		border-color: rgba(0, 0, 0, 0.12);
	}

	.post-card:hover::before {
		opacity: 1;
	}

	.language-switch {
		position: absolute;
		top: 1rem;
		right: 1rem;
		display: flex;
		align-items: center;
		gap: 0.5rem;
		padding: 0.5rem 1rem;
		background: rgba(var(--gray-light), 0.5);
		color: rgb(var(--gray-dark));
		border-radius: 8px;
		font-weight: 500;
		font-size: 0.9375rem;
		text-decoration: none;
		transition: all 0.2s ease;
		border: 1px solid rgba(0, 0, 0, 0.08);
	}

	.language-switch:hover {
		background: rgba(var(--gray-light), 0.7);
		color: rgb(var(--black));
		transform: translateY(-1px);
	}

	.language-switch .flag {
		font-size: 1.125em;
	}

	.language-switch .text {
		white-space: nowrap;
	}

	.post-content {
		display: flex;
		flex-direction: column;
		gap: 1.25rem;
		flex: 1;
	}

	.post-meta {
		display: flex;
		flex-direction: column;
		gap: 0.75rem;
	}

	.meta-details {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		font-size: 0.9rem;
		color: rgb(var(--gray));
		flex-wrap: wrap;
	}

	.category-nav {
		display: inline-flex;
		align-items: center;
		gap: 0.75rem;
	}

	.category-link {
		color: rgb(var(--black));
		text-decoration: none;
		font-weight: 600;
		transition: all 0.2s ease;
		padding: 0.5rem 0.75rem;
		border-radius: 8px;
		background: rgba(var(--gray-light), 0.3);
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
	}

	.category-link:hover {
		color: var(--accent-color);
		background: rgba(var(--gray-light), 0.4);
		transform: translateY(-1px);
	}

	.category-icon {
		font-size: 1.1em;
	}

	.category-name {
		position: relative;
	}

	.subcategory {
		color: rgb(var(--gray));
		font-weight: 500;
		margin-left: 0.25em;
	}

	.separator {
		color: rgb(var(--gray));
		opacity: 0.5;
	}

	.reading-time {
		display: inline-flex;
		align-items: center;
		gap: 0.25rem;
	}

	.post-title-link {
		text-decoration: none;
		color: inherit;
		display: block;
	}

	.post-title-link:hover .post-title {
		color: var(--accent-color);
	}

	.post-title {
		font-size: 1.875rem;
		margin: 0;
		color: rgb(var(--black));
		line-height: 1.3;
		font-weight: 700;
		letter-spacing: -0.02em;
		transition: color 0.2s ease;
	}

	.post-excerpt {
		margin: 0;
		color: rgb(var(--gray-dark));
		line-height: 1.6;
		font-size: 1.0625rem;
	}

	.post-tags {
		display: flex;
		gap: 0.75rem;
		flex-wrap: wrap;
		padding-top: 1.25rem;
		border-top: 1px solid rgba(0, 0, 0, 0.08);
	}

	.tag {
		background: rgba(var(--gray-dark), 0.08);
		color: rgb(var(--gray-dark));
		padding: 0.5rem 1rem;
		border-radius: 8px;
		font-size: 0.875rem;
		font-weight: 500;
		letter-spacing: 0.01em;
		transition: all 0.2s ease;
		text-decoration: none;
		display: inline-flex;
		align-items: center;
		gap: 0.4rem;
	}

	.tag:hover {
		background: rgba(var(--gray-dark), 0.12);
		transform: translateY(-1px);
	}

	@media (max-width: 720px) {
		.post-card {
			padding: 2rem;
		}

		.post-title {
			font-size: 1.625rem;
		}

		.post-excerpt {
			font-size: 1rem;
		}

		.meta-details {
			gap: 0.5rem;
		}

		.category-link {
			padding: 0.375rem 0.625rem;
		}
	}
</style> 