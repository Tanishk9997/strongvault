---
import FormattedDate from './FormattedDate.astro';

interface Props {
	post: {
		id: string;
		data: {
			title: string;
			description: string;
			pubDate: Date;
			category?: string;
			language: string[];
			readingTime?: number;
			tags?: string[];
		};
	};
}

const { post } = Astro.props;
const languageEmojis: Record<string, string> = {
	en: 'üá∫üá∏',
	es: 'üáµüá∑'
};
---

<article class="post-card">
	<div class="post-meta">
		{post.data.category && (
			<a href={`/categories/${post.data.category.toLowerCase()}/`} class="category-badge">{post.data.category}</a>
		)}
		<FormattedDate date={post.data.pubDate} />
		<span class="language-badge">{post.data.language.map(lang => languageEmojis[lang]).join(' ')}</span>
		{post.data.readingTime && <span>‚è±Ô∏è {post.data.readingTime} min read</span>}
	</div>
	<a href={`/blog/${post.id}/`} class="post-title-link">
		<h2 class="post-title">{post.data.title}</h2>
	</a>
	<p class="post-excerpt">{post.data.description}</p>
	{post.data.tags && post.data.tags.length > 0 && (
		<div class="post-tags">
			{post.data.tags.map((tag: string) => (
				<span class="tag">{tag}</span>
			))}
		</div>
	)}
</article>

<style>
	.post-card {
		background: rgb(var(--gray-light));
		border-radius: 12px;
		padding: 2em;
		transition: all 0.2s ease;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
		border: 1px solid rgba(0, 0, 0, 0.05);
	}
	.post-card:hover {
		transform: translateY(-4px);
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		border-color: rgba(0, 0, 0, 0.1);
	}
	.post-title-link {
		text-decoration: none;
		color: inherit;
		display: block;
		margin-bottom: 0.75em;
	}
	.post-title-link:hover .post-title {
		color: rgb(var(--accent));
	}
	.post-meta {
		display: flex;
		align-items: center;
		gap: 1.5em;
		margin-bottom: 1.25em;
		font-size: 0.9em;
		color: rgb(var(--gray));
		flex-wrap: wrap;
	}
	.post-meta > *:not(.category-badge) {
		opacity: 0.8;
	}
	.post-title {
		font-size: 1.75em;
		margin: 0;
		color: rgb(var(--black));
		line-height: 1.3;
		font-weight: 600;
	}
	.post-excerpt {
		margin: 0 0 1.5em 0;
		color: rgb(var(--gray-dark));
		line-height: 1.6;
		font-size: 1.1em;
	}
	.post-tags {
		display: flex;
		gap: 0.75em;
		flex-wrap: wrap;
		margin-top: 1.5em;
		padding-top: 1em;
		border-top: 1px solid rgba(0, 0, 0, 0.05);
	}
	.tag {
		background: rgba(var(--gray-dark), 0.1);
		color: rgb(var(--gray-dark));
		padding: 0.3em 0.7em;
		border-radius: 6px;
		font-size: 0.85em;
		font-weight: 400;
		letter-spacing: 0.01em;
		text-transform: lowercase;
	}
	.category-badge {
		background: rgb(var(--accent));
		color: white;
		padding: 0.5em 1.2em;
		border-radius: 8px;
		font-size: 1em;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.05em;
		text-decoration: none;
		transition: all 0.2s ease;
		box-shadow: 0 2px 4px rgba(var(--accent), 0.3);
		display: inline-block;
		margin-right: 0.5em;
	}
	.category-badge:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 8px rgba(var(--accent), 0.4);
		filter: brightness(1.1);
	}
	.language-badge {
		background: rgb(var(--gray-light));
		color: rgb(var(--gray-dark));
		padding: 0.4em 0.9em;
		border-radius: 8px;
		font-size: 0.9em;
		font-weight: 500;
	}
</style> 