---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import BackToTop from '../components/BackToTop.astro';

type Props = CollectionEntry<'blog'>['data'];

const { 
	title, 
	description, 
	pubDate, 
	updatedDate, 
	heroImage,
	readingTime,
	tags,
	category,
	subcategory,
	language
} = Astro.props;

const languageEmojis = {
	en: 'ðŸ‡ºðŸ‡¸',
	es: 'ðŸ‡µðŸ‡·'
};
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={title} description={description} image={heroImage} />
	</head>
	<body>
		<Header />
		<main>
			<article>
				<header class="article-header">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
					<div class="content">
						<div class="metadata">
							{category && <span class="category">{category}</span>}
							{subcategory && <span class="category">/ {subcategory}</span>}
							<span class="separator">â€¢</span>
							<FormattedDate date={pubDate} />
							{updatedDate && (
								<>
									<span class="separator">â€¢</span>
									<span>Updated <FormattedDate date={updatedDate} /></span>
								</>
							)}
							{readingTime && (
								<>
									<span class="separator">â€¢</span>
									<span>{readingTime} min read</span>
								</>
							)}
							{language.map(lang => (
								<span class="language">{languageEmojis[lang]}</span>
							))}
						</div>
						<h1>{title}</h1>
					</div>
				</header>

				<div class="prose">
					<slot />

					{tags && tags.length > 0 && (
						<div class="tags">
							{tags.map((tag) => (
								<span class="tag">{tag}</span>
							))}
						</div>
					)}
				</div>
			</article>
		</main>
		<Footer />
		<BackToTop />
	</body>
</html>

<style>
	main {
		min-height: calc(100vh - 200px);
		max-width: 720px;
		margin: 0 auto;
	}

	.article-header {
		margin-bottom: 2rem;
		width: 100%;
	}

	.article-header img {
		width: 100%;
		height: auto;
		margin-bottom: 2rem;
		display: block;
		border-radius: 12px;
		box-shadow: var(--box-shadow);
	}

	.metadata {
		margin-bottom: 1rem;
		color: rgb(var(--gray));
		font-size: 0.9rem;
		display: flex;
		align-items: center;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.category {
		color: rgb(var(--accent));
		font-weight: 500;
	}

	.separator {
		color: rgb(var(--gray));
	}

	.language {
		margin-left: 0.25rem;
	}

	h1 {
		font-size: 2.5rem;
		line-height: 1.2;
		margin: 0;
	}

	.prose {
		width: 100%;
	}

	.tags {
		display: flex;
		gap: 0.5em;
		flex-wrap: wrap;
		margin-top: 2em;
	}

	.tag {
		background: rgb(var(--accent));
		color: white;
		padding: 0.25em 0.5em;
		border-radius: 4px;
		font-size: 0.8em;
	}

	@media (max-width: 720px) {
		h1 {
			font-size: 2rem;
		}
	}
</style>
