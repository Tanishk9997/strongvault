---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import BackToTop from '../components/BackToTop.astro';
import '../styles/components/BlogPost.css';

type Props = CollectionEntry<'blog'>['data'];

const { 
	title, 
	description, 
	pubDate, 
	updatedDate, 
	heroImage,
	readingTime,
	tags,
	category,
	subcategory,
	language,
	// SEO fields
	canonicalUrl,
	ogImage,
	ogImageAlt,
	robots
} = Astro.props;

const languageEmojis = {
	en: 'ðŸ‡ºðŸ‡¸',
	es: 'ðŸ‡µðŸ‡·'
};

const capitalize = (str: string) => str ? str.charAt(0).toUpperCase() + str.slice(1) : '';
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead 
			title={title} 
			description={description} 
			image={heroImage}
			canonicalUrl={canonicalUrl}
			ogImage={ogImage}
			ogImageAlt={ogImageAlt}
			robots={robots}
		/>
	</head>
	<body>
		<Header />
		<main>
			<article>
				<header class="article-header">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
					<div class="content">
						<div class="metadata">
							<nav class="category-nav" aria-label="Post categories">
								{category && (
									<a href={`/categories/${category.toLowerCase()}/`} class="category-link">{capitalize(category)}</a>
								)}
								{subcategory && category && (
									<span class="subcategory"> / {capitalize(subcategory)}</span>
								)}
							</nav>
							<span class="separator">â€¢</span>
							<FormattedDate date={pubDate} />
							{updatedDate && (
								<>
									<span class="separator">â€¢</span>
									<span>Updated <FormattedDate date={updatedDate} /></span>
								</>
							)}
							{readingTime && (
								<>
									<span class="separator">â€¢</span>
									<span>{readingTime} min read</span>
								</>
							)}
							{language.map(lang => (
								<span class="language">{languageEmojis[lang]}</span>
							))}
						</div>
						<h1>{title}</h1>
					</div>
				</header>

				<div class="prose">
					<slot />

					{tags && tags.length > 0 && (
						<div class="tags">
							{tags.map((tag) => (
								<span class="tag">{tag}</span>
							))}
						</div>
					)}
				</div>
			</article>
		</main>
		<Footer />
		<BackToTop />
	</body>
</html>

<style>
	main {
		min-height: calc(100vh - 200px);
		max-width: 720px;
		margin: 0 auto;
	}
	.category-nav {
		display: inline-block;
		margin-right: 0.5em;
		font-size: 1rem;
		vertical-align: middle;
	}
	.category-link {
		color: #1a202c;
		text-decoration: none;
		font-weight: 600;
		transition: color 0.2s;
	}
	.category-link:hover {
		color: #2563eb;
		text-decoration: underline;
	}
	.subcategory {
		color: #4b5563;
		font-weight: 500;
		margin-left: 0.25em;
	}
</style>
