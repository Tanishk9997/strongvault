---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const getPagination = (posts: any[], page: number, postsPerPage: number) => {
    const startIndex = (page - 1) * postsPerPage;
    const endIndex = startIndex + postsPerPage;
    return {
        posts: posts.slice(startIndex, endIndex),
        totalPages: Math.ceil(posts.length / postsPerPage)
    };
};

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    const nonDraftPosts = posts.filter((post) => !post.data.draft);
    const postsPerPage = 5;
    const totalPages = Math.ceil(nonDraftPosts.length / postsPerPage);
    
    return Array.from({ length: totalPages }, (_, i) => ({
        params: { page: (i + 1).toString() },
    }));
}

const { page } = Astro.params;
const currentPage = parseInt(page || '1');

// Get all blog posts and sort by date
const allPosts = (await getCollection('blog'))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Calculate pagination
const { posts, totalPages } = getPagination(allPosts, currentPage, 5);
---

<BaseLayout title={`Page ${currentPage} - StrongVault`}>
    <main>
        <div class="blog-header">
            <h1>All Posts</h1>
            <p>Browse through our articles about security, privacy, and encryption</p>
        </div>

        <div class="posts-grid">
            {posts.map((post) => (
                <article class="post-card">
                    <a href={`/blog/${post.id}/`}>
                        <div class="post-meta">
                            <span class="category-badge">{post.data.category}</span>
                            <FormattedDate date={post.data.pubDate} />
                            {post.data.readingTime && <span>⏱️ {post.data.readingTime} min read</span>}
                        </div>
                        <h2 class="post-title">{post.data.title}</h2>
                        <p class="post-excerpt">{post.data.description}</p>
                        {post.data.tags && post.data.tags.length > 0 && (
                            <div class="post-tags">
                                {post.data.tags.map((tag: string) => (
                                    <span class="tag">{tag}</span>
                                ))}
                            </div>
                        )}
                    </a>
                </article>
            ))}
        </div>

        {totalPages > 1 && (
            <div class="pagination">
                {currentPage > 1 && (
                    <a href={`/${currentPage - 1}/`} class="pagination-link">← Previous</a>
                )}
                <span class="pagination-info">Page {currentPage} of {totalPages}</span>
                {currentPage < totalPages && (
                    <a href={`/${currentPage + 1}/`} class="pagination-link">Next →</a>
                )}
            </div>
        )}
    </main>
</BaseLayout>

<style>
    main {
        width: 960px;
        max-width: 100%;
        margin: 0 auto;
        padding: 2em;
    }
    .blog-header {
        text-align: center;
        margin-bottom: 2em;
    }
    .blog-header h1 {
        font-size: 2.5em;
        margin-bottom: 0.5em;
    }
    .posts-grid {
        display: grid;
        gap: 2em;
    }
    .post-card {
        background: rgb(var(--gray-light));
        border-radius: 12px;
        padding: 1.5em;
        transition: transform 0.2s ease;
    }
    .post-card:hover {
        transform: translateY(-4px);
    }
    .post-card a {
        text-decoration: none;
        color: inherit;
    }
    .post-meta {
        display: flex;
        align-items: center;
        gap: 1em;
        margin-bottom: 1em;
        font-size: 0.9em;
        color: rgb(var(--gray));
    }
    .post-title {
        font-size: 1.5em;
        margin: 0 0 0.5em 0;
        color: rgb(var(--black));
    }
    .post-excerpt {
        margin: 0 0 1em 0;
        color: rgb(var(--gray-dark));
    }
    .post-tags {
        display: flex;
        gap: 0.5em;
        flex-wrap: wrap;
        margin-top: 1em;
    }
    .tag {
        background: rgb(var(--accent));
        color: white;
        padding: 0.25em 0.5em;
        border-radius: 4px;
        font-size: 0.8em;
    }
    .category-badge {
        background: rgb(var(--accent-light));
        color: rgb(var(--accent));
        padding: 0.25em 0.5em;
        border-radius: 4px;
        font-size: 0.8em;
        font-weight: bold;
    }
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 1em;
        margin-top: 2em;
        padding: 1em;
    }
    .pagination-link {
        color: rgb(var(--accent));
        text-decoration: none;
        font-weight: bold;
    }
    .pagination-link:hover {
        text-decoration: underline;
    }
    .pagination-info {
        color: rgb(var(--gray));
    }
    @media (max-width: 720px) {
        main {
            padding: 1em;
        }
        .pagination {
            flex-direction: column;
            gap: 0.5em;
        }
    }
</style> 