---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import { categories } from '../../data/categories';
import BaseLayout from '../../layouts/BaseLayout.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import BackToHome from '../../components/BackToHome.astro';
import GroupedPostCard from '../../components/GroupedPostCard.astro';

export async function getStaticPaths() {
  return categories.map((category) => ({
    params: { category: category.id },
    props: { category },
  }));
}

interface Props {
  category: typeof categories[0];
}

const { category } = Astro.props;
const posts = await getCollection('blog');
const categoryPosts = posts
  .filter((post: CollectionEntry<'blog'>) => post.data.category?.includes(category.id))
  .sort((a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Group by translationGroup (or fallback to id)
const grouped: Record<string, CollectionEntry<'blog'>[]> = {};
for (const post of categoryPosts) {
  const group = post.data.translationGroup || post.id;
  if (!grouped[group]) grouped[group] = [];
  grouped[group].push(post);
}
const groupedPosts: CollectionEntry<'blog'>[][] = Object.values(grouped);
---

<BaseLayout title={`${category.name} - StrongVault`}>
  <main>
    <BackToHome />
    <div class="blog-header">
      <h1>{category.icon} {category.name}</h1>
      <p>{category.description}</p>
    </div>

    <div class="posts-grid">
      {groupedPosts.map((translations) => (
        <GroupedPostCard translations={translations} />
      ))}
    </div>
  </main>
</BaseLayout>

<style>

  .back-link {
    display: inline-block;
    margin-bottom: 1.5em;
    color: rgb(var(--gray-dark));
    text-decoration: none;
    font-size: 1.1em;
    transition: color 0.2s ease;
  }
  .back-link:hover {
    color: rgb(var(--accent));
  }
  .blog-header {
    text-align: center;
    margin-bottom: 2em;
  }
  .blog-header h1 {
    margin-bottom: 0.5em;
  }
  .posts-grid {
    display: grid;
    gap: 2em;
  }

</style> 