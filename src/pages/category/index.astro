---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { categories } from '../../data/categories';

// Get all non-draft posts
const posts = await getCollection('blog', ({ data }) => !data.draft);

// Count posts per category
const categoryCounts = new Map<string, number>();
posts.forEach(post => {
  post.data.category?.forEach(cat => {
    categoryCounts.set(cat, (categoryCounts.get(cat) || 0) + 1);
  });
});

// Sort categories by post count
const sortedCategories = [...categories].sort((a, b) => {
  const countA = categoryCounts.get(a.id) || 0;
  const countB = categoryCounts.get(b.id) || 0;
  return countB - countA;
});
---

<BaseLayout title="Categories - StrongVault">
  <main>
    <div class="category-header">
      <h1>Categories</h1>
      <p class="category-description">Explore all content organized by category</p>
    </div>

    <div class="categories-grid">
      {sortedCategories.map(category => {
        const postCount = categoryCounts.get(category.id) || 0;
        return (
          <a href={`/category/${category.id}/`} class="category-card">
            <div class="category-icon">{category.icon}</div>
            <h2>{category.name}</h2>
            <p>{category.description}</p>
            <span class="post-count">{postCount} {postCount === 1 ? 'post' : 'posts'}</span>
          </a>
        );
      })}
    </div>
  </main>
</BaseLayout>

<style>
  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .category-header {
    text-align: center;
    margin-bottom: 4rem;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
  }

  .category-header h1 {
    font-size: 3rem;
    line-height: 1.2;
    margin: 0 0 1rem 0;
    font-weight: 800;
    letter-spacing: -0.025em;
    color: var(--text-color);
  }

  .category-description {
    font-size: 1.25rem;
    line-height: 1.6;
    color: var(--secondary-color);
    margin: 0;
  }

  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin: 0 auto;
  }

  .category-card {
    background: var(--background-color);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 2rem;
    text-decoration: none;
    color: var(--text-color);
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .category-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
    border-color: var(--accent-color);
  }

  .category-icon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  .category-card h2 {
    font-size: 1.5rem;
    margin: 0 0 0.5rem 0;
    color: var(--text-color);
  }

  .category-card p {
    color: var(--secondary-color);
    margin: 0 0 1rem 0;
    line-height: 1.6;
  }

  .post-count {
    background: var(--accent-color);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .category-header h1 {
      font-size: 2.25rem;
    }

    .category-description {
      font-size: 1.125rem;
    }

    .categories-grid {
      grid-template-columns: 1fr;
    }
  }
</style> 