---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import GroupedPostCard from '../components/GroupedPostCard.astro';

// Get all blog posts and sort by date
const posts = (await getCollection('blog'))
	.filter((post) => !post.data.draft)
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Group by translationGroup (or fallback to id)
const grouped: Record<string, CollectionEntry<'blog'>[]> = {};
for (const post of posts) {
	const group = post.data.translationGroup || post.id;
	if (!grouped[group]) grouped[group] = [];
	grouped[group].push(post);
}
const groupedPosts: CollectionEntry<'blog'>[][] = Object.values(grouped);

const languageEmojis = {
	en: 'ðŸ‡ºðŸ‡¸',
	es: 'ðŸ‡µðŸ‡·'
};
---

<BaseLayout title="Home - StrongVault">
	<main class="content-wrapper">
		<header class="hero-section">
			<h1>Welcome to the<br />Strong Vault</h1>
			<p class="subtitle">Software, power, weakness, science, opinions, emotional alchemy, DIY creation, and the journey of building a life of integrity</p>
		</header>

		<section class="posts-grid" aria-label="Latest posts">
			{groupedPosts.map((translations) => (
				<GroupedPostCard translations={translations} />
			))}
		</section>
	</main>
</BaseLayout>

<style>
	:root {
		--reading-width: 65ch;
		--line-height: 1.75;
		--letter-spacing: -0.011em;
	}

	.hero-section {
		text-align: center;
		margin-bottom: 4rem;
		max-width: 800px;
		margin-left: auto;
		margin-right: auto;
	}

	.hero-section h1 {
		font-size: 3.5rem;
		line-height: 1.2;
		margin: 0 0 1.5rem 0;
		font-weight: 800;
		letter-spacing: -0.025em;
		color: var(--text-color);
	}

	.subtitle {
		font-size: 1.25rem;
		line-height: 1.6;
		color: var(--secondary-color);
		margin: 0;
	}

	.posts-grid {
		display: grid;
		gap: 2.5rem;
		max-width: 800px;
		margin: 0 auto;
	}

	.post-card {
		background: var(--background-color);
		border-radius: 12px;
		padding: 2rem;
		transition: all 0.3s ease;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
		border: 1px solid var(--border-color);
	}

	.post-card:hover {
		transform: translateY(-4px);
		box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
		border-color: var(--accent-color);
	}

	.post-title-link {
		text-decoration: none;
		color: inherit;
		display: block;
		margin-bottom: 1rem;
	}

	.post-title-link:hover .post-title {
		color: var(--accent-color);
	}

	.post-meta {
		display: flex;
		align-items: center;
		gap: 1.5rem;
		margin-bottom: 1.25rem;
		font-size: 0.9375rem;
		color: var(--secondary-color);
		flex-wrap: wrap;
	}

	.post-title {
		font-size: 1.75rem;
		margin: 0 0 1rem 0;
		color: var(--text-color);
		line-height: 1.3;
		font-weight: 700;
	}

	.post-excerpt {
		margin: 0 0 1.5rem 0;
		color: var(--secondary-color);
		line-height: 1.6;
		font-size: 1.125rem;
	}

	.post-tags {
		display: flex;
		gap: 0.75rem;
		flex-wrap: wrap;
		margin-top: 1.5rem;
		padding-top: 1rem;
		border-top: 1px solid var(--border-color);
	}

	.tag {
		background: rgba(var(--gray-dark), 0.1);
		color: var(--secondary-color);
		padding: 0.375rem 0.75rem;
		border-radius: 6px;
		font-size: 0.875rem;
		font-weight: 500;
		letter-spacing: 0.01em;
		text-transform: lowercase;
	}

	.category-badge {
		background: var(--accent-color);
		color: white;
		padding: 0.5rem 1rem;
		border-radius: 8px;
		font-size: 0.875rem;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.05em;
		text-decoration: none;
		transition: all 0.2s ease;
		box-shadow: 0 2px 4px rgba(var(--accent), 0.3);
	}

	.category-badge:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 8px rgba(var(--accent), 0.4);
		filter: brightness(1.1);
	}

	.language-badge {
		background: var(--background-color);
		color: var(--secondary-color);
		padding: 0.375rem 0.75rem;
		border-radius: 6px;
		font-size: 0.875rem;
		font-weight: 500;
		border: 1px solid var(--border-color);
	}

	@media (max-width: 768px) {
		.hero-section h1 {
			font-size: 2.5rem;
		}

		.subtitle {
			font-size: 1.125rem;
		}
	}
</style>
