---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

// Get all blog posts and sort by date
const posts = (await getCollection('blog'))
	.filter((post) => !post.data.draft)
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const languageEmojis = {
	en: 'üá∫üá∏',
	es: 'üáµüá∑'
};
---

<BaseLayout title="Home - StrongVault">
	<main>
		<div class="blog-header">
			<h1>Welcome to the Strong Vault</h1>
			<p>Software, power, weakness, science, opinions, emotional alchemy, DIY creation, and the journey of building a life of integrity.</p>
		</div>

		<div class="posts-grid">
			{posts.map((post) => (
				<article class="post-card">
					<a href={`/blog/${post.id}/`}>
						<div class="post-meta">
							{post.data.category && (
								<a href={`/categories/${post.data.category.toLowerCase()}/`} class="category-badge">{post.data.category}</a>
							)}
							<FormattedDate date={post.data.pubDate} />
							<span class="language-badge">{post.data.language.map(lang => languageEmojis[lang]).join(' ')}</span>
							{post.data.readingTime && <span>‚è±Ô∏è {post.data.readingTime} min read</span>}
						</div>
						<h2 class="post-title">{post.data.title}</h2>
						<p class="post-excerpt">{post.data.description}</p>
						{post.data.tags && post.data.tags.length > 0 && (
							<div class="post-tags">
								{post.data.tags.map((tag: string) => (
									<span class="tag">{tag}</span>
								))}
							</div>
						)}
					</a>
				</article>
			))}
		</div>
	</main>
</BaseLayout>

<style>
	main {
		width: 960px;
		max-width: 100%;
		margin: 0 auto;
		padding: 2em;
	}
	.back-link {
		display: inline-block;
		margin-bottom: 1.5em;
		color: rgb(var(--gray-dark));
		text-decoration: none;
		font-size: 1.1em;
		transition: color 0.2s ease;
	}
	.back-link:hover {
		color: rgb(var(--accent));
	}
	.blog-header {
		text-align: center;
		margin-bottom: 2em;
	}
	.blog-header h1 {
		font-size: 2.5em;
		margin-bottom: 0.5em;
	}
	.posts-grid {
		display: grid;
		gap: 2em;
	}
	.post-card {
		background: rgb(var(--gray-light));
		border-radius: 12px;
		padding: 2em;
		transition: all 0.2s ease;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
		border: 1px solid rgba(0, 0, 0, 0.05);
	}
	.post-card:hover {
		transform: translateY(-4px);
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		border-color: rgba(0, 0, 0, 0.1);
	}
	.post-card a {
		text-decoration: none;
		color: inherit;
		display: block;
	}
	.post-meta {
		display: flex;
		align-items: center;
		gap: 1em;
		margin-bottom: 1.25em;
		font-size: 0.9em;
		color: rgb(var(--gray-dark));
		flex-wrap: wrap;
	}
	.post-title {
		font-size: 1.75em;
		margin: 0 0 0.75em 0;
		color: rgb(var(--black));
		line-height: 1.3;
		font-weight: 600;
	}
	.post-excerpt {
		margin: 0 0 1.5em 0;
		color: rgb(var(--gray-dark));
		line-height: 1.6;
		font-size: 1.1em;
	}
	.post-tags {
		display: flex;
		gap: 0.75em;
		flex-wrap: wrap;
		margin-top: 1.5em;
		padding-top: 1em;
		border-top: 1px solid rgba(0, 0, 0, 0.05);
	}
	.tag {
		background: rgba(var(--gray-dark), 0.1);
		color: rgb(var(--gray-dark));
		padding: 0.3em 0.7em;
		border-radius: 6px;
		font-size: 0.85em;
		font-weight: 400;
		letter-spacing: 0.01em;
		text-transform: lowercase;
	}
	.category-badge {
		background: rgb(var(--accent));
		color: white;
		padding: 0.4em 1em;
		border-radius: 8px;
		font-size: 0.9em;
		font-weight: 600;
		text-transform: lowercase;
		text-decoration: none;
		transition: all 0.2s ease;
		box-shadow: 0 2px 4px rgba(var(--accent), 0.2);
	}
	.category-badge:hover {
		transform: translateY(-1px);
		box-shadow: 0 4px 8px rgba(var(--accent), 0.3);
	}
	.language-badge {
		background: rgb(var(--gray-light));
		color: rgb(var(--gray-dark));
		padding: 0.4em 0.9em;
		border-radius: 8px;
		font-size: 0.9em;
		font-weight: 500;
	}
	@media (max-width: 720px) {
		main {
			padding: 1em;
		}
	}
</style>
